<div class="input-field" style="margin: 5em 0;">
  <input type="text" name="share" value="{{host}}/explorer?torrentId={{torrent.infoHash}}" readonly>
  <label for="share">Share</label>
</div>
<div id="list" class="row"></div>
<p id="no-results">No files found</p>

<script>
  const torrent = {{{ json torrent }}};
  $(document).ready(_ => {
    const nor = $('#no-results');
    const list = $('#list');

    if (torrent.files.length === 0) list.hide();
    else {
      nor.hide();
      for (let f of torrent.files) {

        const url = `?torrentId=${torrent.infoHash}&fileIndex=${f.index}`;

        list.append(`<div class="col s12">
          <div class="card">
            <div class="card-content">
              <span class="card-title">${f.name} - ${size2string(f.length)}</span>
              <p>Type: ${f.type}</p>
              <p>Path: ${f.path}</p>
              <p>Stream URL: <a href="{{host}}/torrent/stream${url}">{{host}}/torrent/stream${url}</a></p>
            </div>
            <div class="card-action">
              <a href="/torrent/stream${url}" download="${f.name}" class="green-text text-darken-3" target="_blank">Download</a>  
              ${
          f.type.startsWith('video')
            || f.type.startsWith('video')
            || f.type.startsWith('image')
            || f.type.startsWith('audio')
            ? `<a href="/player${url}" class="purple-text text-darken-3">Video Player</a>` : ""}
            </div >
          </div >
        </div > `);
      }
    }
  });

  function size2string(n) {
    const types = ['bytes', 'Kb', 'Mb', 'Gb', 'Tb'];
    let size = n;
    let i = 0;
    while (size >= 1024) {
      size /= 1024;
      i++;
    }
    return `${parseFloat(size).toFixed(2)} ${types[i] || '?'}`;
  }
</script>